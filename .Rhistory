View(bad)
bad <- my_data[is.na(VAL)]
bad <- is.na(my_date["VAL"])
bad <- is.na(my_data["VAL"])
table(bad)
my_data[!bad & "VAL" == 24]
my_data[!bad]
bad <- is.na(my_date["VAL"])
bad <- is.na(my_data["VAL"])
bad
house_val <- my_data["VAL"][!bad]
house_val
house_val[] >24
table(house_val)
ngap <- read.table(file = "clipboard", sep = "\t", header = TRUE)
ngap
dat <- read.table(file = "clipboard", sep = "\t", header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML2)
library(XML)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternalNodes = TRUE)
doc <- xmlTree(fileUrl,useInternalNodes = TRUE)
doc <- xmlTree(fileUrl)
doc <- xmlTree(fileUrl,useInternalNodes = TRUE)
doc <- xmlTree(fileUrl,useInternalNodes = TRUE)
doc <- xmlTreeParse(fileUrl,useInternalNodes = TRUE)
doc <- htmlTreeParse(fileUrl,useInternalNodes = TRUE)
fread()
fread()
install.packages("fread")
data.table()
library(table)
library(data.table)
fread()
search(fread)
search("fread")
install.packages("data.table")
library(data.table)
DT < -fread("getdata$Fdata%2Fss06pid.csv")
DT <- fread("getdata$Fdata%2Fss06pid.csv")
DT <- fread("./getdata$Fdata%2Fss06pid.csv")
DT <- fread("C:/Users/hongji/OneDrive - Novelis Inc/Documents/GitHub/datasciencecoursera/GettingAndCleaningData/getdata$Fdata%2Fss06pid.csv")
DT <- fread("getdata$Fdata%2Fss06pid.csv")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
DT <- read_csv("getdata%2Fdata%2Fss06pid.csv")
View(DT)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
View(DT)
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
if (x > 3) {}
if (x > 3) { }
x <- matrix(1:6,2,3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))){
print(x[i,j])
}
}
x
install.packages("swirl")
library(swirl)
swirl()
TRUE == TRUE
(FALSE==TRUE)==FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
!isTRUE(4 < 3)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(c(TRUE,FALSE,TRUE))
which(ints > 7)
any()
any(ints > 0)
any(ints < 0)
all(ints > 0)
install.packages("MySQL")
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="", host = "genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;")
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19",host="genome-mysql.cse.ucsc.edu")
dbDisconnect(ucscDb)
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,'affyU133Plus2')
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(gh19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
query <- dbSendQuery(gh19, "select * from affyU133Plus2 where misMatches between 1 and 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
hg19 <- dbConnect(MySQL(), user="genome", db="hg19",host="genome-mysql.cse.ucsc.edu")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
query
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
dim(affyMisSmall)
dbDisconnect(hg19)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
library(httr)
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[c(10,20,30,100)]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
fname <- "wksst8110.for"
download_if_not_exists(fname, "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download_if_not_exists(fname, "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",".")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","./")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","./")
lapply()
lapply()
?lapply(list, function)
?lapply
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
lapply(x, mean)
x <- 1:4
lapply(x, runif)
lapply(x, function(elt) elt[,1])
lapply(x, function(elt))
lapply
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
class(lapply(x, mean))
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20,1), d = rnorm(100,5))
lapply(x,mean)
x <- 1:4
lapply(x, runif)
class(lapply(x, runif))
x
?runif
runif(4)
runif(4)
runif(4)
x <- 1:4
lapply(x, runif, min = 0, max = 10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[,1])
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags, class)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range())
lapply(flag_shapes, range
)
shape_mat <- sapply(flag_shapes, range)
shape_mat
View(flags)
class(shape_mat)
unique(c(3,4,5,5,5,6,6,))
unique(c(3,4,5,5,5,6,6))
unique_vals <-lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flasg, unique)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, summary)
tapply(flags$population, flags$landmass, summary)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
download.file(fileUrl,destfile="./data/restaurants.csv")
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
restData<-read.csv("./data/restaurants.csv")
restData
View(restData)
head(restData,n=3)
tail(restData,n=3)
summary(restData)
str(restData)
quantile(restData$councilDistrict, na.rm =  TRUE)
table(restData$zipCode,useNA="ifany")
table(restData$councilDistrict, restData$zipCode)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(is.na(restData$zipCode))
all(is.na(restData$zipCode)>0)
colSums(is.na(restData))
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
restData[restData$zipCode %in% c("21212","21213")]
restData[restData$zipCode %in% c("21212","21213"),]
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit, data=DF)
xt
warpbreaks$replicate <- rep(1:9, len = 54)
xt = xtabs(breaks ~., data=warpbreaks)
xt
ftable(xt)
fakeData = rnomr(le5)
fakeData = rnorm(le5)
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
s1 <- seq(1,10,by=2); s1
s2 <- seq(1,10,length=3)
s3
s2
x <- c(1,3,8,25,100);
seq(along = x)
restDat$nearMe = restData$neighborhood %in% c("Roland Park", "Homeland")
restData$nearMe = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData$zipCode = ifelse(restData$zipCode <0, TRUE, FALSE)
table(restData$zipCode, restData$zipCode <0)
restData$zipWrong = ifelse(restData$zipCode <0, TRUE, FALSE)
table(restData$zipWrong, restData$zipCode <0)
restData$zipGroups = cut(restData$zipCode, breaks=quantile(restData$zipCode))
View(restData)
restData<-read.csv("./data/restaurants.csv")
restData$zipGroups = cut(restData$zipCode, breaks=quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipGroups, restData$zipCode)
library(Hmisc)
install.packages("Hmisc")
restData$zipGroups = cut2(restData$zipCode,g=4)
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData$zcf)
yesno <- sample(c("yes","no"),size=10, replace=TRUE)
yesnofac = factor(yesno,levels = c("yes","no"))
relevel(yesnofac, ref="yes")
as.numeric(yesnofac)
restData$zipGroups = cut2(restData$zipCode,g=5)
table(restData$zipGroups)
restData$zipGroups
library(plyr)
restData2 = mutate(restData,zipGroups=cut2(zipCode,g=4))
table(restData2$zipGroups)
View(restData2)
View(restData)
install.packages("reshape2")
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
mtcars$carname
View(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars = c("mpg","hp"))
head(carMelt,n=3)
tail(carMelt)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean())
cylData <- dcast(carMelt, cyl ~ variable, mean
)
cylData
head(InsectSpt)
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray,sum)
spIns = split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount = lapply(spIns,sum)
sprCount
sprCount = sapply(spIns,sum)
sprCount = lapply(spIns,sum)
unlist(sprCount)
sprCount = sapply(spIns,sum)
sprCount
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
spraySums <- ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum))
dim(spraySums)
library(dplyr)
install.packages("dplyr")
chicago <- readRDS("chicago.rds")
chicago <- readRDS("chicago.rds")
dim(chicago)
str(chicago)
head(select(chicago, city:dptp))
library(dplyr)
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
chic.f <- filter(chicago, pm25tmean2 >30)
head(chic.f,10)
chic.f <- filter(chicago, pm25tmean2 >30, & tmpd >80)
chic.f <- filter(chicago, pm25tmean2 >30 & tmpd >80)
head(chic.f)
chicago <- arrange(chicago, date)
head(chicago)
tail(chicago)
chicago <- arrange(chicago, desc(date))
head(chicago)
tail(chicago)
chicago <- rename(chicago,pm25 = pm25tmean2, dewpoint = dptp)
head(chicago)
tail(chicago)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, nae = TRUE))
head(chicago)
tail(chicago)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, na.rm = TRUE))
head(select(chicago,pm25,pm25detrend))
chicago <-mutate(chicago, tempcat = factor(1*(tmpd >80), labels = c("cold","hot")))
hotcold <- group_by(chicago,tempcat)
hotcold
summarize(hotcold, pm25 = mean(25), o3 = max(o3tmean2), no2 =median(no2tmean2))
summarize(hotcold, pm25 = mean(pm25, na.rm=TRUE), o3 = max(o3tmean2), no2 =median(no2tmean2))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
summarize(years, pm25 = mean(pm25, na.rm=TRUE), o3 = max(o3tmean2), no2 =median(no2tmean2))
years <- group_by(chicago, year)
summarize(years, pm25 = mean(pm25, na.rm=TRUE), o3 = max(o3tmean2), no2 =median(no2tmean2))
chicago %>% mutate(month = as.POSIXlt(date)$mon +1) %>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm=TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
fileUrl1 = "https://dl.dropboxusercontent.com/u/7710864/data/review-qpr29.csv"
fileUrl2 = "https://dl.dropboxusercontent.com/u/7710864/data/solutions-qpr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv",method="curl")
download.file(fileUrl1, destfile = "./data/reviews.csv",method='curl')
fileUrl1 = "http://dl.dropboxusercontent.com/u/7710864/data/review-qpr29.csv"
fileUrl2 = "http://dl.dropboxusercontent.com/u/7710864/data/solutions-qpr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv",method='curl')
fileUrl2 = "https://dl.dropboxusercontent.com/u/7710864/data/solutions-qpr29.csv"
fileUrl1 = "https://dl.dropboxusercontent.com/u/7710864/data/review-qpr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv")
fileUrl1 = "http://dl.dropboxusercontent.com/u/7710864/data/review-apr29.csv"
fileUrl2 = "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv")
fileUrl1 = "http://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv")
reveiws = read.csv("./data/reviews.csv")
solutions = read.csv("./data/solutions.csv")
head(review,2)
head(reviews,2)
head(reveiws,2)
head(solutions)
naems(reveiws)
names(reveiws)
names(solutions)
mergedData = merge(reveiws,solutions, by.x = "solution_id", by.y="id", all=TRUE)
head(mergedData)
intersect(names(solutions),names(reveiws))
mergedData2 = merge(reveiws,solutions, all=TRUE)
library(swirl)
swirl(
)
swirl()
install_course("Getting and Changing Data")
install_course("Getting and Cleaning Data")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "Idaho_Housing.csv")
getwd()
dir
dir()
idHousing <- read.csv("Idaho_Housing.csv")
head idHousing
head(idHousing)
?strsplit
strsplit(idHousing, 'wgtp')
strsplit(names(idHousing), 'wgtp')
strsplit(names(idHousing), "wgtp")
strsplit(names(idHousing), "wgtp")[123]
GDP <- read.csv("GDP.csv",skip = 5)
GDP
GDP <- read.csv("GDP.csv",skip = 5, HEADER = false)
GDP <- read.csv("GDP.csv",skip = 5, header = false)
GDP <- read.csv("GDP.csv",skip = 5, header = FALSE)
head(GDP)
tail(GDP)
GDP_190 <- GPD[1:190]
GDP_190 <- GDP[1:190]
GDP_190 <- GDP[1:190,]
tail(GDP_190)
GDP[191,]
GDP[192,]
GDP[193,]
GDP[200,]
GDP[201,]
GDP_200 <- GDP[1:200,]
View(GDP_190)
rm(GDP_190)
mean(as.integer(gsub(GDP_200["V5"],",","")))
mean(as.integer(gsub(GDP_200["V5"],",","")), na.rm = TRUE)
gsub(GDP_200["V5"],"m","")
?gsub
gsub(",",GDP_200["V5"],"")
gsub(",","",GDP_200["V5"])
mean(as.integer(gsub(",","",GDP_200["V5"])), na.rm = TRUE)
as.interger(gsub(",","",GDP_200["V5"]))
as.integer(gsub(",","",GDP_200["V5"]))
View(GDP_200)
GDP_200["V5"]
gsub(",","",GDP_200["V5"])
sub(",","",GDP_200["V5"])
gsub(",","",GDP_200["V5",])
sapply(GDP_200$V5, gsub(",",""))
sapply(GDP_200$V5, gsub(",","",GDP_200))
sapply(GDP_200$V5, gsub(",","",GDP_200$V5))
sapply(GDP_200$V5, gsub,",","")
lapply(GDP_200$V5, gsub,",","")
gsub(",","",GDP_200["V5"])
mean((sub(",","",GDP_200["V5"]))
_
mean((sub(",","",GDP_200["V5"]))
)
as.integer(gsum(",","",GDP_200$V5[1]))
as.integer(gsub(",","",GDP_200$V5[1]))
as.integer(gsub(",","",GDP_200$V5[,]))
as.integer(gsub(",","",GDP_200$V5[1,]))
as.integer(gsub(",","",GDP_200$V5[,1]))
as.integer(gsub(",","",GDP_200$V5))
mean(as.integer(gsub(",","",GDP_200$V5)))
View(GDP)
mean(as.integer(gsub(",","",GDP$V5)))
mean(as.integer(gsub(",","",GDP$V5)),na.rm = TRUE)
grep
GDP <- read.csv("GDP.csv")
View(GDP)
edStat <- read.csv("EDSTATS_Country.csv")
View(edStat)
mergedData <- merge(GDP, edStat, by.x = "CountryCode", by.y = "CountryCode")
View(mergedData)
grep("FY", mergedData$Special.Notes)
grep("FY|Fiscal year", mergedData$Special.Notes)
grep("[FY|Fiscal year][June]", mergedData$Special.Notes)
grep("[FY|Fiscal year]&[June]", mergedData$Special.Notes)
grep("[June]", mergedData$Special.Notes)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn
sampleTimes = index(amzn)
sampleTimes
library(lubraidate)
library(lubridate)
class(sampleTimes)
year(sampleTimes)
year(sampleTimes) == 2012
library(dplyr)
filter(sampleTime, year(sampleTimes) == 2012)
filter(sampleTime, year(sampleTime) == 2012)
filter(sampleTimes, year(sampleTimes) == 2012)
filter(sampleTimes, as.character(year(sampleTimes)) == 2012)
filter(sampleTimes, as.character(year(sampleTimes)) == "2012")
2012 <- year(sampleTimes) == 2012
year2012 <- year(sampleTimes) == 2012
year2012[TRUE]
year2012[[TRUE]]
year2012[][TRUE]
table[year2012]
levels(year2012)
View(year2012)
sampleTimes[year2012 == TRUE]
(sampleTimes[year2012 == TRUE & wday(sampleTimes) == 2])
